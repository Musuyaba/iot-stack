version: '3'

services:
  mosquitto-broker: # Mosquitto Stack
    container_name: mosquitto-broker
    build:
      context: mosquitto
      dockerfile: Dockerfile
      args:
        - PASSWORD_PATH=/mosquitto/config/password.txt
    env_file:
      - "./mosquitto/.env"
    volumes:
      - type: bind
        source: ./cert/mosquitto/generated
        target: /mosquitto/certs/
        read_only: false
      - type: bind
        source: ./mosquitto/config/mosquitto.conf
        target: /mosquitto/config/mosquitto.conf
        read_only: false
      - type: bind
        source: ./mosquitto/log
        target: /mosquitto/log/
        read_only: false
      - type: volume
        source: data_network
        target: /mosquitto/data/
    ports:
      - "8883:8883"
      - "9001:9001"
    networks:
      - iot_networks
    profiles:
      - mosquitto-stack
    depends_on:
      ssl:
        condition: service_completed_successfully

  # mosquitto-pub: # Mosquitto Stack
  #   container_name: mosquitto-pub
  #   image: eclipse-mosquitto:2.0
  #   volumes:
  #     - type: bind
  #       source: ./cert/mosquitto
  #       target: /mosquitto/certs/
  #       read_only: false
  #   depends_on:
  #     - mosquitto-broker
  #     - mosquitto-sub
  #   networks:
  #     - iot_networks
  #   profiles:
  #     - mosquitto-stack

  mosquitto-sub: # Mosquitto Stack
    container_name: mosquitto-sub
    image: eclipse-mosquitto:2.0
    volumes:
      - type: bind
        source: ./cert/mosquitto/generated
        target: /mosquitto/certs/
        read_only: false
    command: sh -c "mosquitto_sub -h mosquitto-broker -t topics/iot -u admin -P admin --cert /mosquitto/certs/ca.crt --key /mosquitto/certs/client.key --tls-version tlsv1.2"
    depends_on:
      - mosquitto-broker
    networks:
      - iot_networks
    profiles:
      - mosquitto-stack

  ssl: # Mosquitto Stack
    container_name: ssl
    build:
      context: cert/mosquitto
      dockerfile: Dockerfile
    networks:
      - iot_networks
    volumes:
      - type: bind
        source: ./cert/mosquitto/generated
        target: /cert/mosquitto/generated
        read_only: false
    profiles:
      - mosquitto-stack

  # rabbitmq:
  #   image: "rabbitmq:management"
  #   container_name: "rabbitmq"
  #   env_file:
  #     - "rabbitmq/.env"
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   networks:
  #     - "iot_networks"
  
  #   profiles:
  #     - "rabbitmq-stack"

  # emqx:
  #   container_name: "emqx"
  #   image: "emqx:latest"
  #   profiles:
  #     - "emqx-stack"
    

  # # Database
  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   ports:
  #     - "8083:8083"
  #     - "8086:8086"
  #     - "8090:8090"
  #     - "2003:2003"
  #   env_file:
  #     - "influxdb/.env"
  #   networks:
  #     - iot_networks
  #   depends_on:
  #     - rabbitmq
  #   # volumes:
  #   #   # Data persistency
  #   #   # sudo mkdir -p /srv/docker/influxdb/data
  #   #   - /srv/docker/influxdb/data:/var/lib/influxdb

  # telegraf:
  #   image: telegraf:latest
  #   container_name: telegraf
  #   depends_on:
  #     - influxdb
  #   networks:
  #     - iot_networks
  #   # volumes:
  #   #   - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - "grafana/.env"
  #   user: "0"
  #   depends_on:
  #     - influxdb
  #     - rabbitmq
  #   networks:
  #     - iot_networks
  #   # volumes:
  #   #   # Data persistency
  #   #   # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
  #   #   - /srv/docker/grafana/data:/var/lib/grafana

networks:
  iot_networks:
    driver: bridge
volumes:
  data_network:
    name: "iot_data_network"

